import{_ as a,c as e,o,a4 as i}from"./chunks/framework.CasJ7utE.js";const _=JSON.parse('{"title":"2023.4.5 Magisk v26.0","description":"","frontmatter":{},"headers":[],"relativePath":"releases/26000.md","filePath":"releases/26000.md","lastUpdated":1694964698000}'),r={name:"releases/26000.md"},s=i('<h1 id="_2023-4-5-magisk-v26-0" tabindex="-1">2023.4.5 Magisk v26.0 <a class="header-anchor" href="#_2023-4-5-magisk-v26-0" aria-label="Permalink to &quot;2023.4.5 Magisk v26.0&quot;">​</a></h1><p>嘿！好久不见！</p><h2 id="将最低-android-版本提升到6-0" tabindex="-1">将最低 Android 版本提升到6.0 <a class="header-anchor" href="#将最低-android-版本提升到6-0" aria-label="Permalink to &quot;将最低 Android 版本提升到6.0&quot;">​</a></h2><p>Magisk 对 Android Lollipop 的支持在不知不觉中已经中断了一段时间。此外，Magisk 的活跃开发者都没有运行 Android Lollipop 的实际硬件。我们依赖使用官方安卓模拟器对旧平台进行回归测试，但谷歌从未提供过支持 SELinux 的棒棒糖模拟器镜像，这让我们别无选择，只能放弃对棒棒糖的支持，因为在没有充分测试的情况下，我们不放心支持安卓棒棒糖。</p><h2 id="新的-magic-mount-实现" tabindex="-1">新的 Magic Mount 实现 <a class="header-anchor" href="#新的-magic-mount-实现" aria-label="Permalink to &quot;新的 Magic Mount 实现&quot;">​</a></h2><p>魔力挂载（Magic Mount）是一项能让模块修改分区的功能，现已进行了重大改写。现有实现无法很好地与使用 <code>overlayfs</code> 向系统注入覆盖层的 OEM 配合使用。新的实现方式从根本上改变了文件系统镜像的创建方式，为我们提供了未修改文件系统的更精确克隆。</p><h2 id="新的-sepolicy-rule-实现" tabindex="-1">新的 <code>sepolicy.rule</code> 实现 <a class="header-anchor" href="#新的-sepolicy-rule-实现" aria-label="Permalink to &quot;新的 `sepolicy.rule` 实现&quot;">​</a></h2><p>Magisk 允许模块通过包含 <code>sepolicy.rule</code> 文件来提供自定义 SELinux 补丁。由于 SELinux 补丁的复杂性，该功能的兼容性一直很不稳定；许多设备都不支持。在此版本中，我们设计了全新的启动前分区检测机制，以支持更多设备。由于复杂的原因，该检测机制无法在第三方 Recovery 环境中执行。</p><p><strong>这意味着使用第三方 Recovery 功能安装 Magisk v26+ 将是不完整的；需要在启动后通过 Magisk 应用程序重新安装。</strong></p><h2 id="zygisk-更新" tabindex="-1">Zygisk 更新 <a class="header-anchor" href="#zygisk-更新" aria-label="Permalink to &quot;Zygisk 更新&quot;">​</a></h2><p>**新版 Zygisk API v4 现已上线！**它具有新功能和完善的 PLT 函数钩子 API。Zygisk 的实现也经历了一些重大的重构，包括新的代码加载/卸载机制和新的 PLT 函数钩子实现。</p><p>前往 <a href="https://github.com/topjohnwu/zygisk-module-sample" target="_blank" rel="noreferrer">Zygisk 模块示例</a> 仓库查看新的 API 和文档！</p><p><strong>完整更新日志： <a href="/MagiskChineseDocument/changes.html">这里</a></strong></p>',13),t=[s];function n(l,c,d,p,h,g){return o(),e("div",null,t)}const k=a(r,[["render",n]]);export{_ as __pageData,k as default};
